@import "../_mixins";

// SWITCH CHECKBOX--------------------------------------------------------------

:root {
  // Switch is a special use case that needs text and button to be white
  --switch-text: hsl(0, 0%, 95%);
}

.switch {
  justify-content: space-between;
  align-items: center;

  > input:focus {
    + .switch__toggle {
      .as-focus();
    }
  }
}

.switch__toggle {
  color: var(--switch-text);
  background: var(--grey-light);
  display: flex;
  align-items: center;
  padding: 0.25em;
  border-radius: 99em;

  &[for] {
    cursor: pointer;
  }

  .switch.checked > & {
    //background: var(--primary-light);
    background: linear-gradient(to right, var(--primary), var(--primary-light));

    .rtl & {
      background: linear-gradient(to left, var(--primary), var(--primary-light));
    }
  }

  // required for default Switch without props
  //min-height: 2.1875em; // 35px without borders - equivalent to normal text input (1.2em * 16 = 19)
}

// Do not style padding directly to these wrappers so they can collapse completely
.switch__on,
.switch__off,
.switch__btn {
  display: block;
  line-height: 1;
}

.switch__on {
  > .icon-checkmark {
    font-size: 1.5em;
    .padding-h(0.25em);
  }
}

.switch__btn {
  background: var(--switch-text);
  min-height: 1.625em; // (1.625 * 16 = 26) + (0.25 * 2 * 16 = 8 padding) + 2 border = 36px
  min-width: 1.625em;
  border-radius: 50%;
}

.switch__on,
.switch__off {
  > .text {
    padding: 0.25em 0.5em;
  }
}

.switch__off {
  direction: rtl; // for collapse animation to be symmetrical to switch on
  .rtl & {
    direction: ltr;
  }
}

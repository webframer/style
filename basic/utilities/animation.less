@import "../_mixins";

:root {
  --duration: 500ms;
}

// =============================================================================
// ANIMATIONS (REPEATING)
// =============================================================================

@keyframes blink {
  from {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.animate-blink {
  animation: blink @speed-slow infinite;
}

@keyframes blink-half {
  from {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
  to {
    opacity: 1;
  }
}

.animate-blink-half {
  animation: blink-half @speed-slow infinite;
}

@keyframes up {
  from {
    transform: translate3d(0, 0%, 0);
  }
  to {
    transform: translate3d(0, -50%, 0);
  }
}

/* Component should be twice the length along Y axis to simulate continuous animation */
.animate-up {
  animation: up @speed-slower infinite linear;
}

/* Bounce */
@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translate3d(0, 0, 0);
  }
  40% {
    transform: translate3d(0, -30px, 0);
  }
  60% {
    transform: translate3d(0, -15px, 0);
  }
}

.animate-bounce {
  animation: bounce @speed-slower infinite linear;
}

/** Spin */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.spin {
  transition: all @speed-base ease 0s;
  animation: spin @speed-base infinite linear;
  transform-origin: center;
}

// =============================================================================
// ENTRY TRANSITIONS
// =============================================================================

/* Appear visually (will be accessible with keyboard) */
@keyframes appear {
  from {
    opacity: 0;
  }
  to {
    opacity: inherit;
  }
}

.appear {
  animation: appear @speed-base forwards;
}

.appear-slow {
  animation: appear @speed-slow forwards;
}

/* Disappear visually (will be accessible with keyboard) */
@keyframes disappear {
  from {
    opacity: inherit;
  }
  to {
    opacity: 0;
  }
}

.disappear {
  animation: disappear @speed-base forwards;
}

.disappear-slow {
  animation: disappear @speed-slow forwards;
}

/* Collapse Vertically */
@keyframes collapse-v {
  from {
    transform: scaleY(0);
  }
  to {
    height: 0;
    transform: scaleY(1);
  }
}

.collapse-v {
  animation: collapse-v @speed-base forwards;
}

/* Expand Horizontally */
@keyframes expand-h {
  from {
    width: 0;
    transform: scaleX(0);
  }
  to {
    width: auto;
    transform: scaleX(1);
  }
}

.expand-h {
  width: 0;
  animation: expand-h @speed-base forwards;
}

/* Expand Vertically */
@keyframes expand-v {
  from {
    height: 0;
    transform: scaleY(0);
  }
  to {
    height: auto;
    transform: scaleY(1);
  }
}

.expand-v {
  height: 0;
  animation: expand-v @speed-base forwards;
}

/* Fade In */
@keyframes fade-in {
  from {
    visibility: visible;
    opacity: 0;
  }
  to {
    visibility: visible;
    opacity: 1;
  }
}

.fade-in {
  animation: fade-in @speed-base forwards;
}

.fade-in-fast {
  animation: fade-in @speed-fast forwards;
}

.fade-in-slow {
  animation: fade-in @speed-slow forwards;
}

/* Fade Out (will not be accessible with keyboard) */
@keyframes fade-out {
  from {
    visibility: visible;
    opacity: 1;
  }
  99% {
    visibility: visible;
  }
  to {
    visibility: hidden;
    opacity: 0;
    z-index: -1;
  }
}

.fade-out {
  animation: fade-out @speed-base forwards;
}

.fade-out-slow {
  animation: fade-out @speed-slow forwards;
}

/* Fade in Down */
@keyframes fade-in-down {
  from {
    opacity: 0;
    transform: translate3d(0%, -10%, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0%, 0%, 0);
  }
}

.fade-in-down {
  animation: fade-in-down @speed-base forwards;
}

/* Fade in Up */
@keyframes fade-in-up {
  from {
    opacity: 0;
    transform: translate3d(0%, 10%, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0%, 0%, 0);
  }
}

.fade-in-up {
  animation: fade-in-up @speed-base forwards;
}

/* Fade in Up from center */
@keyframes fade-in-up-center {
  from {
    opacity: 0;
    transform: translate3d(-50%, 10%, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(-50%, 0%, 0);
  }
}

.fade-in-up-center {
  animation: fade-in-up-center @speed-base forwards;
}

/* Fade in Left */
@keyframes fade-in-left {
  from {
    opacity: 0;
    transform: translate3d(10%, 0%, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0%, 0%, 0);
  }
}

.fade-in-left {
  animation: fade-in-left @speed-base forwards;
}

/* Fade in Right */
@keyframes fade-in-right {
  from {
    opacity: 0;
    transform: translate3d(-10%, 0%, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0%, 0%, 0);
  }
}

.fade-in-right {
  animation: fade-in-right @speed-base forwards;
}

/* Fade Out to the Left */
@keyframes fade-out-left {
  from {
    opacity: 1;
    transform: translate3d(0%, 0%, 0);
  }
  to {
    opacity: 0;
    transform: translate3d(-10%, 0%, 0);
  }
}

.fade-out-left {
  animation: fade-out-left @speed-base forwards;
}

/* Fade Out to the Right */
@keyframes fade-out-right {
  from {
    opacity: 1;
    transform: translate3d(0%, 0%, 0);
  }
  to {
    opacity: 0;
    transform: translate3d(10%, 0%, 0);
  }
}

.fade-out-right {
  animation: fade-out-right @speed-base forwards;
}

/* Pulsating Signal */
@keyframes signal-pulse {
  from {
    opacity: 0;
    transform: translate3d(-50%, -50%, 0) scale(1, 1);
  }
  10% {
    opacity: 1;
  }
  to {
    opacity: 0;
    transform: translate3d(-50%, -50%, 0) scale(5, 5);
  }
}

.signal-pulse {
  @color: var(--primary);
  @size: 20;
  .circle(u(@size));
  background: @color;
  position: relative;

  &:before, &:after {
    .object();
    &:extend(.position-centered all);
    background-image: radial-gradient(transparent, @color);
    animation: signal-pulse ~'calc(var(--duration) * 2)' infinite;
  }

  &:before {
    .circle(u(@size));
  }

  &:after {
    .circle(u(round(@size*2)));
    animation-delay: ~'calc(var(--duration) * 1.5)';
  }

  &.small {
    .scale(0.5);
  }

  &.large {
    .scale(2);
  }

  .scale(@ratio) {
    @dimension: u(round(@size*@ratio));
    .square(@dimension);
    &:before {
      .square(@dimension);
    }
    &:after {
      .square(@dimension*2);
    }
  }
}

/* Slide Down */
@keyframes slide-in-down {
  from {
    transform: translate3d(0%, -100%, 0);
  }
  to {
    transform: translate3d(0%, 0%, 0);
  }
}

.slide-in-down {
  animation: slide-in-down @speed-base;
}

/* Slide in Down from center */
@keyframes slide-in-down-center {
  from {
    transform: translate3d(-50%, -100%, 0);
  }
  to {
    transform: translate3d(-50%, 0%, 0);
  }
}

.slide-in-down-center {
  animation: slide-in-down-center @speed-base;
}

/* Slide Up */
@keyframes slide-in-up {
  from {
    transform: translate3d(0%, 100%, 0);
  }
  to {
    transform: translate3d(0%, 0%, 0);
  }
}

.slide-in-up {
  animation: slide-in-up @speed-base;
}

/* Slide Right */
@keyframes slide-in-right {
  from {
    transform: translate3d(-100%, 0%, 0);
  }
  to {
    transform: translate3d(0%, 0%, 0);
  }
}

.slide-in-right {
  animation: slide-in-right @speed-base;
}

/* Slide Left */
@keyframes slide-in-left {
  from {
    transform: translate3d(100%, 0%, 0);
  }
  to {
    transform: translate3d(0%, 0%, 0);
  }
}

.slide-in-left {
  animation: slide-in-left @speed-base;
}

/* Slide Out to the Left */
@keyframes slide-out-left {
  from {
    transform: translate3d(0%, 0%, 0);
  }
  to {
    transform: translate3d(-100%, 0%, 0);
  }
}

.slide-out-left {
  animation: slide-out-left @speed-base forwards;
}

/* Slide Out to the Right */
@keyframes slide-out-right {
  from {
    transform: translate3d(0%, 0%, 0);
  }
  to {
    transform: translate3d(100%, 0%, 0);
  }
}

.slide-out-right {
  animation: slide-out-right @speed-base forwards;
}

@keyframes zoom-in {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.25);
  }
  100% {
    transform: scale(1);
  }
}

.zoom-in {
  animation: zoom-in @speed-base forwards;
}

@keyframes zoom-out {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.8);
  }
  100% {
    transform: scale(1);
  }
}

.zoom-out {
  animation: zoom-out @speed-base forwards;
}

// =============================================================================
// PROJECT VARIABLES
//
// Methodologies Used:
// 1. BEM - Block__Element--Modifier (https://css-tricks.com/bem-101/)
//    .block -> represents the higher level of an abstraction or component.
//    .block__element -> represents a descendant of .block that helps form .block as a whole.
//    .block--modifier -> represents a different state or version of .block.
//    Example:
//        .person {}
//        .person__hand {}
//        .person--female {}
//        .person--female__hand {}
//        .person__hand--left {}
// 2. Object Oriented CSS - separate HTML structure from presentation (only nest styles when must)
// 3. Semantic UI - replaces most BEM modifiers for modularity (http://semantic-ui.com/)
// =============================================================================
.function() { // define as mixin to avoid Unused CSS selector warning
  /**
   * Convert Unitless Value into REM Equivalent
   * @example:
   *   height: u(16);  // >>> `height: 1rem;`
  */
  .u(@val) {
    return: unit((@val / 16), rem);
  }

  /**
   * Convert Unitless Value into EM Equivalent
   * @example:
   *   height: u(16);  // >>> `height: 1em;`
  */
  .p(@val) {
    return: unit((@val / 16), em);
  }

  /**
   * Convert REM value to Pixel equivalent
   * @example:
   *   @pixel: px(1rem);  // >>> `16px;`
   */
  .px(@rem) {
    return: unit((@rem * 16), px);
  }
}

// -----------------------------------------------------------------------------
// COMMON
// -----------------------------------------------------------------------------

// Animation
@speed-base:          var(--duration);
@speed-fast:          ~'calc(var(--duration) / 2)';
@speed-slow:          ~'calc(var(--duration) * 2)';
@speed-slower:        ~'calc(var(--duration) * 4)';

// Paths (relative to public/static/all.css file)
// Define as absolute path to avoid Next.js module not found error.
@path-fonts:          '/static/fonts';
@path-icons:          '/static/icons/'; // masked icon SVG, must match FILE.PATH_ICONS
@path-images:         '/static/images/'; // match FILE.PATH_IMAGES
@icomoon-font-path:   @path-fonts; // override path for icomoon if activated

// -----------------------------------------------------------------------------
// COLORS
// -----------------------------------------------------------------------------

// Standard (for pure white or black, use `white` or `black` keywords directly)
@color-theme:         rgb(215, 231, 253); // default background color
@color-gray:          rgb(127, 127, 127); // rgb(127, 127, 127) is neutral
@color-black:         rgb(7, 7, 7);
@color-off-white:     rgb(250,250,250);
@color-grey:          rgb(127,127,127); // can have hue
@color-off-black:     rgb(22,22,22);
@color-white:         rgb(255,255,255); // semantic color for button
@color-white-light:   rgb(0,0,0); // semantic color for button in dark mode
// !IMPORTANT: do not use these variables directly, use `Semantic Colors` below
@color-grey-dark-90:  darken(@color-grey, 47%);
@color-grey-dark-80:  darken(@color-grey, 44%);
@color-grey-dark-70:  darken(@color-grey, 40%);
@color-grey-dark-65:  darken(@color-grey, 37%);
@color-grey-dark-60:  darken(@color-grey, 35%);
@color-grey-dark-50:  darken(@color-grey, 30%);
@color-grey-dark-40:  darken(@color-grey, 25%);
@color-grey-dark-30:  darken(@color-grey, 20%);
@color-grey-dark-20:  darken(@color-grey, 15%);
@color-grey-dark-10:  darken(@color-grey, 10%);
@color-grey-light-10: lighten(@color-grey, 10%);
@color-grey-light-20: lighten(@color-grey, 25%);
@color-grey-light-30: lighten(@color-grey, 35%);
@color-grey-light-40: lighten(@color-grey, 40%);
@color-grey-light-50: lighten(@color-grey, 43%);
@color-grey-light-60: lighten(@color-grey, 45%);
@color-grey-light-70: lighten(@color-grey, 47%);
@color-grey-light-80: lighten(@color-grey, 48%);
@color-grey-light-90: lighten(@color-grey, 49%);

// Style Guide
// !IMPORTANT: do not use these variables directly, use `Semantic Colors` below
@color-grey-light:    rgb(217, 217, 214);
@color-grey-dark:     rgb(83, 86, 90);
@color-brown-light:   rgb(118, 102, 83);
@color-brown:         rgb(88, 72, 53);
@color-red-darker:    rgb(138, 42, 43);
@color-red-dark:      rgb(189, 5, 18);
@color-red:           rgb(220, 30, 45);
@color-red-light:     rgb(247, 111, 170);
@color-red-lighter:   rgb(255, 155, 155);
@color-pink-light:    rgb(255, 125, 205);
@color-pink:          rgb(235, 77, 164);
@color-pink-dark:     rgb(193, 35, 193);
@color-orange-dark:   rgb(215, 90, 30);
@color-orange:        rgb(229, 114, 37);
@color-orange-light:  rgb(254, 130, 114);
@color-gold:          rgb(239, 165, 44);
@color-gold-light:    rgb(243, 200, 88);
@color-yellow-dark:   rgb(237, 190, 22);
@color-yellow:        rgb(250, 215, 88);
@color-yellow-light:  rgb(255, 237, 122);
@color-olive-light:   rgb(168, 172, 73);
@color-olive:         rgb(138, 142, 43);
@color-lime-light:    rgb(243, 229, 0);
@color-lime-yellow:   rgb(206, 220, 0);
@color-lime:          rgb(120, 190, 32);
@color-green-light:   rgb(36, 210, 187);
@color-green:         rgb(55, 145, 70);
@color-green-dark:    rgb(29, 114, 61);
@color-emerald:       rgb(27, 158, 129);
@color-emerald-light: rgb(87, 203, 158);
@color-teal:          rgb(15, 116, 140);
@color-teal-light:    rgb(30, 133, 166);
@color-cyan-lighter:  rgb(100, 217, 245);
@color-cyan-light:    rgb(55, 169, 224);
@color-cyan:          rgb(0, 144, 218);
@color-blue-light:    rgb(50, 111, 247);
@color-blue:          rgb(45, 65, 220);
@color-navy:          rgb(32, 50, 110);
@color-purple:        rgb(55, 21, 130);
@color-purple-light:  rgb(217, 127, 245);
@color-violet:        rgb(67, 65, 177);
@color-violet-light:  rgb(103, 118, 234);
@all-colors:  // activated colors, (do not use CSS variables directly, so that color name can be used as CSS class)
  primary, secondary, accent,
  info, success, warning, error,
  dark, grey, light, neutral;

// Semantic Colors
@color-primary:           var(--primary); // Primary theme color
@color-primary-light:     @color-violet-light; // Primary theme color
@color-secondary:         @color-pink; // Secondary theme color
@color-secondary-light:   @color-pink-light; // Secondary theme color
@color-tertiary:          @color-emerald; // Tertiary theme color
@color-tertiary-light:    @color-emerald-light; // Tertiary theme color
@color-text:              @color-off-black; // Foreground color for default text
@color-text-inverse:      @color-off-white;
@color-text-grey:         @color-grey;
@color-bg:                var(--bg); // Background color for default text
@color-bg-inverse:        @color-off-black;
@color-bg-white:          rgb(255,255,255);
@color-bg-black:          @color-off-black;
@color-bg-panel-header:   lighten(@color-bg-black, 5%);
@color-bg-green-light:    rgb(215,248,246);
@color-bg-grey-lightest:  @color-grey-light-60;
@color-bg-grey-lighter:   @color-grey-light-40;
@color-bg-grey-light:     rgb(237,237,237);
@color-bg-grey:           rgb(222,222,222);
@color-bg-grey-dark:      darken(@color-grey, 15%);
@color-link:              @color-primary;
@color-link-inverse:      @color-primary-light;
@color-shadow-lightest:   rgba(0, 0, 0, 0.05);
@color-shadow-lighter:    rgba(0, 0, 0, 0.1);
@color-shadow-light:      rgba(0, 0, 0, 0.2);
@color-shadow:            rgba(0, 0, 0, 0.30);
@color-shadow-dark:       rgba(0, 0, 0, 0.45);
@color-shadow-darker:     rgba(0, 0, 0, 0.6);
@color-shadow-darkest:    rgba(0, 0, 0, 0.75);
@color-highlight-lightest:rgba(255, 255, 255, 0.45);
@color-highlight-lighter: rgba(255, 255, 255, 0.30);
@color-highlight:         rgba(255, 255, 255, 0.15);
@color-highlight-dark:    rgba(255, 255, 255, 0.10);
@color-highlight-darker:  rgba(255, 255, 255, 0.05);
@color-highlight-darkest: rgba(255, 255, 255, 0.02);
@color-neutral:           fade(@color-gray, 35%);
@color-border:            fade(@color-grey, 35%);
@color-border-inverse:    fade(@color-grey, 30%);
@color-border-light:      @color-grey-light-40;
@color-border-lighter:    @color-grey-light-70;
@color-border-dark:       @color-grey-dark-20;
@color-button:            @color-primary;
@color-button-hover:      hsl(@color-primary,115%);
@color-button-active:     hsl(@color-primary, 85%);
@color-button-disabled:   @color-grey-dark;
@color-button-secondary:  @color-blue-light;
@color-disabled:          @color-grey;
@color-chevron:           @color-grey;
@color-icon:              @color-primary;
@color-panel-header:      @color-grey-dark;
@color-table-row-odd:     rgb(248, 248, 248);
@color-table-row-even:    rgb(232, 232, 232);
@color-table-selected:    @color-teal-light;
@color-table-fill:        @color-table-row-odd;
@color-alert:             @color-red;
@color-alert-light:       @color-red-light;
@color-error:             @color-red;
@color-error-light:       @color-red-lighter;
@color-info:              rgb(21, 112, 180);
@color-info-light:        @color-blue-light;
@color-success:           @color-green;
@color-success-light:     @color-green-light;
@color-warning:           @color-orange;
@color-warning-light:     @color-orange-light;

// -----------------------------------------------------------------------------
// FONTS
// -----------------------------------------------------------------------------
@default-unit:                  rem;
@font-weight:                   400;
@font-weight-bold:              600;
@font-subset:                   'latin'; // or `latin` for smaller subset, check Google Fonts for options

// Font Family                  // @Note: use Google font for a consistent user experience and branding, and because it has full language support
@font-family-base-name:         'Noto Sans Mono'; // by Google is thinner, with line-height 21.5 and aligns a little lower, but is universal
@font-family-base:              @font-family-base-name, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
@fonts-from-google:             '@{font-family-base-name}:@{font-sizes}';
// Uncomment the line/s below to define default font using uploaded font files
//.font-face(@font-family-base-name);
//.font-face(@family: @font-family-base-name; @file: 'VIC-Bold'; @weight: bold;); // Define custom font

// Use 'Source Sans Pro' for Tailwind preview of .ordinal and other number styling
@font-family-secondary-name:    'Source Sans Pro'; // 'Menlo' is a MacOS system font, is taller, has simpler characters, and aligned in the middle with 19 line-height
@font-family-secondary:         @font-family-secondary-name, ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;
// Uncomment line below to load secondary font from Google's server
@fonts-from-google:             '@{font-family-base-name}:@{font-sizes}';
//@fonts-from-google:             '@{font-family-base-name}:@{font-sizes}|@{font-family-secondary-name}:@{font-sizes}';
// Uncomment the line/s below to define secondary font using uploaded font files
//.font-face(@font-family-secondary-name);

// Google Fonts Request
@font-sizes:                    '@{font-weight},@{font-weight-bold}';
@font-request:                  '@{fonts-from-google}&display=swap&subset=@{font-subset}'; // loaded inside `_imports.less`

// Uncomment the line/s below to define icon font using uploaded font files
//.font-face(@font-family-icon-name);

// Sizes
@size-scale:            100%; // set this to html element so `1rem = 10px` for easier `rem` interpretation
@size-base:             u(16); // default text size, used to scale all other sizes, like button, etc.
@size-base-px:          px(@size-base);
@size-base-space:       u(round(@size-base-px * (1/4))); // character spacing
@size-smallest:         u(round((11/16) * @size-base-px));  // round to whole pixel, then convert to rem
@size-smaller:          u(round((12/16) * @size-base-px));
@size-small:            u(round((14/16) * @size-base-px));
@size-large:            u(round((20/16) * @size-base-px));
@size-larger:           u(round((24/16) * @size-base-px));
@size-largest:          u(round((32/16) * @size-base-px));
@size-h6:               u(round((18/16) * @size-base-px));  // actual header sizes will be converted to %
@size-h5:               u(round((20/16) * @size-base-px));
@size-h4:               u(round((22/16) * @size-base-px));
@size-h3:               u(round((24/16) * @size-base-px));
@size-h2:               u(round((28/16) * @size-base-px));
@size-h1:               u(round((32/16) * @size-base-px));

// Icons
@size-icon:             2rem; // Custom icon fonts http://icomoon.io/app/#/select
@size-icon-px:          px(@size-icon);
@size-icon-smallest:    u(round((12/20) * @size-icon-px));
@size-icon-smaller:     u(round((14/20) * @size-icon-px));
@size-icon-small:       u(round((16/20) * @size-icon-px));
@size-icon-large:       u(round((24/20) * @size-icon-px));
@size-icon-larger:      u(round((30/20) * @size-icon-px));
@size-icon-largest:     u(round((40/20) * @size-icon-px));

// Line Heights
@line-height-base:      1.25; // 20/16 - browser's default is normal, which depends on font
@line-height-small:     1.2857142857; // 18/14 - for font-small
@line-height-smaller:   1.25; // 15/12
@line-height-smallest:  1.3; // 13/10


// SELECTORS -------------------------------------------------------------------
// -----------------------------------------------------------------------------
@select-icon:           ~'i[class^="icon-"], i[class*=" icon-"]';
@select-icon-mask:      ~'i[class^="icon-"] > .icon__mask, i[class*=" icon-"] > .icon__mask';
@select-interaction:    ~'&:hover, &:focus, &:active';
@select-interaction-not:~'&:not(:hover):not(:focus):not(:active)';
@select-code-block:     ~'code[class^="language-"], code[class*=" language-"]';

// -----------------------------------------------------------------------------
// LAYOUT
// -----------------------------------------------------------------------------

// Margin
@margin-smallest:       u(3);
@margin-smaller:        u(6);
@margin-small:          u(12);
@margin-base:           u(16); // use 16 to match with Tailwind and have sharp pixels when dividing content between gaps
@margin-large:          u(20);
@margin-larger:         u(24); // use even number to get sharp pixels on low end devices
@margin-largest:        u(30);

// Padding
@padding-base:          @margin-base;
@padding-smallest:      @margin-smallest;
@padding-smaller:       @margin-smaller;
@padding-small:         @margin-small;
@padding-large:         @margin-large;
@padding-larger:        @margin-larger;
@padding-largest:       @margin-largest;

// Border
@border-size:           u(1);
@border-size-thick:     @border-size * 2;
@border-style:          solid;
@border:                @border-size @border-style;
@border-base:           @border @color-border;
@border-base-light:     @border @color-border-light;
@border-base-dark:      @border @color-border-dark;
@radius-smallest:       u(3);
@radius-smaller:        u(4);
@radius-small:          u(5);
@radius-base:           u(6);
@radius-large:          u(12);
@radius-larger:         u(18);
@radius-largest:        u(24);
@radius-round:          999rem;

// Screen Widths
// Ideally, should be defined in EM, see https://engageinteractive.co.uk/blog/em-vs-rem-vs-px
@screen-unit:           unit((1/16), em); // for use with media screen breakpoints
@screen-iphone6:        unit((375/16), em);
@screen-mobile-small:   unit((360/16), em); // Mobile Vertical Layout
@screen-mobile:         unit((480/16), em); // Mobile Horizontal Layout
@screen-tablet:         unit((768/16), em);
@screen-800:            unit((800/16), em);
@screen-desktop:        unit((992/16), em);
@screen-large:          unit((1200/16), em);
@screen-wide:           unit((1366/16), em);
@screen-huge:           unit((1680/16), em);
@screen-fold:           unit((600/16), em); // vertical height
@screen-height-offset:  75; // iOS Safari browser bar offset (will be fixed when using flex scroll)


// -----------------------------------------------------------------------------
// THEME
// -----------------------------------------------------------------------------
@size-avatar:           u(60);
@size-avatar-small:     u(30);
@size-avatar-large:     u(90);
@size-avatar-larger:    u(120);

// Logo (limit dimensions to allow user upload any image size)
//@logo-max-width:        220px;
//@logo-max-width-small:  (@logo-max-width   /2); /* for mobile devices */
//@logo-max-height:       (@logo-max-width * (5/8));
//@logo-max-height-small: (@logo-max-height  /2); /* for mobile devices */
